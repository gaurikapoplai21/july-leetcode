/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    static void inorder(TreeNode* root,vector<int>& v)
    {
        if(!root)
        {
            
            return;
        }
        if(root->left == NULL && root->right == NULL)
        {
            v.push_back(-1);
        }
        inorder(root->left,v);
        v.push_back(root->val);
        inorder(root->right,v);
        
    }
    bool isSameTree(TreeNode* p, TreeNode* q) 
    {
        vector<int> v;
        vector<int> y;
        inorder(p,v);
        inorder(q,y);
        for(int i:v)
        {
            cout<<i<<" ";
        }
        cout<<endl;
        for(int j:y)
        {
            cout<<j<<" ";
        }
        if(v==y)
        {
            return true;
        }
        return false;
        
    }
};
