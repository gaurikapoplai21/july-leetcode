/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) 
    {
        vector<vector<int>> ans;
        if(!root)
        {
            return ans;
        }
        queue<struct TreeNode*> q;
        q.push(root);
        while(!q.empty())
        {
            int s = q.size();
            vector<int> v;
            for(int i=0;i<s;i++)
            {
               int x = q.front()->val;
               struct TreeNode* curr = q.front();
               q.pop();
               v.push_back(x);
               if(curr->right)
               {
                    q.push(curr->right);
               }
               if(curr->left)
               {
                   q.push(curr->left);
               }
               
                
            }
            reverse(v.begin(),v.end());
            ans.push_back(v);
        }
        reverse(ans.begin(),ans.end());
        return ans;
        
            
    }
};
