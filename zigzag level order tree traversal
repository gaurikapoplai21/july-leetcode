/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {   vector<vector<int>> ans;
        if(!root)
        {
            return ans;
        }
        stack<struct TreeNode*> currlevel;
        stack<struct TreeNode*> nextlevel;
        currlevel.push(root);
        bool lefttoright = false;
        
        vector<int> v;
        while(!currlevel.empty() || !nextlevel.empty())
        {   struct TreeNode* curr = currlevel.top();
            currlevel.pop();
            v.push_back(curr->val);
            if(lefttoright==false)
            {
                if(curr->left)
                {
                    nextlevel.push(curr->left);
                }
                if(curr->right)
                {
                     nextlevel.push(curr->right);
                }
               
            }
            else if(lefttoright == true)
            {   if(curr -> right)
                {
                  nextlevel.push(curr->right);
                }
                if(curr -> left)
                {
                    nextlevel.push(curr->left);
                }
                
            }
           
           if(currlevel.empty())
           {
               stack<struct TreeNode*> temp = currlevel;
               currlevel = nextlevel ;
               nextlevel = temp;
               //cout<<"ue";
               ans.push_back(v);
               v.clear();
               lefttoright = !lefttoright;
               
               
           }
        }
        return ans;
        
    }
};
