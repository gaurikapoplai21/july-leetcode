class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) 
    {   vector<int> v;
        unordered_map<int,int> indegree;
        for(int i=0;i<prerequisites.size();i++)
        {
            indegree[prerequisites[i][0]]++;
        }
        queue<int> q;
        for(int i=0;i<numCourses;i++)
        {
            if(indegree[i]==0)
            {
                q.push(i);
                //cout<<i;
            }
        }
        while(!q.empty())
        {
            int x = q.front();
            //cout<<x;
            v.push_back(x);
            q.pop();
            for(int i=0;i<prerequisites.size();i++)
            {
                if(x==prerequisites[i][1])
                {   
                    --indegree[prerequisites[i][0]];
                    
                    if(indegree[prerequisites[i][0]]==0)
                    {
                        q.push(prerequisites[i][0]);
                        cout<<prerequisites[i][0];
                    }
                }
            }
        }
       if(v.size()!= numCourses)
       {
           vector<int> x;
           return x;
       }
     return v;
    }
};
